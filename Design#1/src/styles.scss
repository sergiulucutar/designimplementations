/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

$freshDelay: 1.5s;

$c_red: #BF9E91;
$c_green: #97C6B5;
$c_yellow: #CFC489;

$t_curve: cubic-bezier(.55, 0, .1, 1);

:root {
	* {
		color: white;
		font-family: 'Syncopate', sans-serif;
		font-weight: bold;

		opacity: 1;
		transform: translateY(0);
		transition: opacity 1s $t_curve, transform 1s $t_curve;
		box-sizing: border-box;
	}
}

html, body, main {
	width: 100%;
	height: 100%;
}

main {
	display: grid;
	grid-template-rows: 100px auto 100px;
	grid-template-columns: 100px 1fr 1fr 100px;

	&.fresh {
		.hero-title h1 {
			opacity: 0;
		}

		.menu_top span {
			transform: translateY(-100%);
			opacity: 0;
		}

		.menu_left a {
			opacity: 0;
		}

		.menu_bottom a {
			transform: translateY(100%);
			opacity: 0;
		}
	}
}

.layer {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

.loader {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;

	pointer-events: none;
	overflow: hidden;
	z-index: 6;

	.layer {
		top: 0;
		height: 0;

		pointer-events: all;
		transition: height 1.5s $t_curve;

		&:nth-child(1) {
			background-color: $c_red;
		}

		&:nth-child(2) {
			background-color: $c_green;
		}

		&:nth-child(3) {
			background-color: $c_yellow;
		}
	}

	&.active {
		.layer {
			height: 100%;
	
			transition: height 0s linear .25s;
			@for $i from 1 through 3 {
				&:nth-child(#{$i}) {
					animation: load 1.5s $t_curve (($i - 1) / 10) * 400ms * $i forwards;
				}
			}
		}
	}
}

@keyframes load {
	from {
		top: 100%;
	}

	to {
		top: 0;
	}
}

.hero {
	grid-row: 1 / -1;
	grid-column: 1 / -1;

	display: grid;
	grid-template-rows: auto;
	grid-template-columns: 1fr 1fr;
	
	background-color: beige;
	
	&-left, &-right {
		grid-row: 1;

		display: grid;
		grid-template-rows: 1fr 1fr;

		overflow: hidden;
		
		> .half {
			position: relative;

			.layer {
				background-color: black;

				z-index: 0;
				opacity: 0;

				transform: translateX(0);
				transition: transform 1.5s $t_curve;
			}

			.layer-active {
				z-index: 1 !important;
				opacity: 1;

				&-next {
					opacity: 1;
				}

				&-prev {
					z-index: 2;
					opacity: 1;
				}
			}

			&:first-child .layer-active-prev {
				transform: translateX(-100%);
			}

			&:last-child .layer-active-prev {
				transform: translateX(100%);
			}
		}
	}

	&-left {
		grid-column: 1;

		.layer:nth-child(2) {
			background-color: $c_red;
		}

		.layer:nth-child(3) {
			background-color: $c_green;
		}

		.layer:nth-child(4) {
			background-color: $c_yellow;
		}
	}

	&-right {
		grid-column: 2;

		.layer {
			background-attachment: fixed;
			background-position: 125% 50%;
			background-repeat: no-repeat;
			background-size: auto 120%;
			
			&:not(:first-child) {
				transition: background-position 1.5s $t_curve .75s, background-size 1.5s $t_curve .75s, transform 1.5s $t_curve .75s !important;
			}

			&-active, &-active-prev {
				background-size: auto 100%;
			}
		}

		> .half:first-child {
			.layer-active-prev {
				background-position: 310% 50%;
			}
		}

		> .half:last-child {
			.layer-active-prev {
				background-position: -60% 50%;
			}
		}
	}

	&-title {
		grid-row: 1 / -1;
		grid-column: 1 / -1;

		position: relative;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;

		z-index: 4;

		h1 {
			position: absolute;
			font-size: 20vw;
			opacity: .2;

			transition-delay: $freshDelay;
		}

		h2, h3 {
			position: relative;
			display: block;
			width: 100%;
		}
		
		h2 {
			display: flex;


			height: 5vw;
			font-size: 5vw;

			.half {
				position: relative;
				width: 50%;
				height: 5vw;
				margin: 0 20px;

				&:first-child .layer {
					text-align: right;
				}

				&:last-child .layer {
					text-align: left;

					&-active {
						transition-delay: .3s;
					}
				}
			}
		}

		h3 {
			height: 1vw;
			transform: translateY(-50px);

			text-align: center;
		}

		.layer {
			text-align: center;

			transform: translateY(-100%);
			transition: all 1s $t_curve;
			opacity: 0;

			&-active {
				transform: translateY(0);
				transition-delay: .2s;
				opacity: 1;

				&-next {
					transform: translateY(100%);
					opacity: 0;
				}
			}
		}
	}
}

.menu {
	&_top, &_left, &_bottom {
		z-index: 5;

		a {
			display: inline-block;
			text-decoration: none;
		}
	}

	&_top {
		grid-row: 1;
		grid-column: 2;

		display: flex;
		align-items: flex-end;
		justify-content: space-between;

		> *:last-child {
			margin-right: 50px;
		}

		span {
			display: inline-block;
			transition-delay: $freshDelay / 2;
		}
	}

	&_left {
		grid-row: 2;
		grid-column: 1;

		display: flex;
		align-items: center;


		div {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			justify-content: space-around;
			
			height: 60%;

			a {
				display: block;
	
				font-size: 12px;
				opacity: .7;
	
				transform: rotate(-90deg);
				transition-delay: $freshDelay;
			}
		}

	}

	&_bottom {
		grid-row: 3;
		grid-column: 2;

		a {
			padding: 7px;
			margin-right: 50px;

			
			@for $i from 1 through 4 {
				&:nth-child(#{$i}) {
					transition-delay: $freshDelay + $i * .1s;
				}
			}

			&.active {
				border-bottom: 2px solid white;
			}
		}
	}
}

