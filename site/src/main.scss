@import './reset.scss';

// @font-face {
//   font-family: 'Monument Extended Regular';
//   src: url('./assets/fonts/MonumentExtended-Regular.otf');
//   font-weight: normal;
//   font-style: normal;
// }

@font-face {
  font-family: 'Monument Extended Bold';
  src: url('./assets/fonts/MonumentExtended-Ultrabold.otf');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

// @font-face {
//   font-family: 'Bebas Neue Bold';
//   src: url('./assets/fonts/BebasNeueBold.ttf');
//   font-weight: normal;
//   font-style: normal;
// }

@font-face {
  font-family: 'Montserrat-Bold';
  src: url('./assets/fonts/Montserrat-Bold.ttf');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Montserrat-Regular';
  src: url('./assets/fonts/Montserrat-Regular.ttf');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

* {
  box-sizing: border-box;

  --bezier: cubic-bezier(0.4, 0, 0.1, 1);
}

html {
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  background-color: #101110;

  color: white;

  overflow-x: hidden;

  // &:before {
  //   content: '';

  //   position: fixed;
  //   top: -10%;
  //   left: -10%;
  //   width: 110%;
  //   height: 110%;

  //   background-image: url('./assets/images/noise.png');

  //   opacity: 0.02;
  //   z-index: -1;

  //   animation: bg_noise 1s steps(60) infinite;
  // }

  > section {
    width: 100vw;
    height: 100vh;
  }
}

main {
  display: grid;
  grid-template-columns: repeat(4, 1fr);

  width: 100%;
  height: 100vh;

  padding: 24px 100px;

  .shape {
    position: absolute;
    top: 0;
    left: 30%;

    width: 70vmax;
    height: 70vmax;

    border-radius: 50%;

    background-color: #011936;

    transform: translate(-50%, -50%);

    z-index: -1;
  }

  .interaction {
    position: absolute;
    top: 0;
    left: 0;

    z-index: 2;
  }

  h1 {
    grid-column: 2;

    display: flex;
    align-items: center;

    // font-family: 'Bebas Neue Bold', sans-serif;
    font-family: 'Monument Extended Bold', sans-serif;
    font-size: 3rem;

    > span {
      display: inline-block;
      height: 4rem;

      overflow: hidden;

      span {
        display: inline-block;
        transform: translateY(0) skewY(0);
        transition: transform 1s var(--bezier);
      }

      &:last-child span {
        transition-delay: 0.1s;
      }
    }

    &.hidden {
      span span {
        transform: translateY(200%) skewY(5deg);
      }
    }
  }

  nav {
    grid-column: 4;

    ul {
      // display: flex;

      // justify-content: space-between;
      text-align: right;

      li {
        padding: 5px;

        font-family: 'Montserrat-Bold', sans-serif;
        font-size: 1.8rem;

        overflow: hidden;

        a {
          display: inline-block;
          color: inherit;
          text-decoration: none;

          transform: translateY(0) skewY(0);
          transition: transform 1s var(--bezier);
        }

        &:nth-of-type(2) {
          transition-delay: 0.1s;
        }

        &:nth-of-type(3) {
          transition-delay: 0.2s;
        }
      }

      &.hidden a {
        transform: translateY(160%) skewY(10deg);
      }
    }
  }
}

.about {
  position: relative;

  display: grid;
  grid-template-rows: repeat(5, 1fr);
  grid-template-columns: 40% 20% auto;
  grid-gap: 4vw;

  background-color: #011936;

  > div {
    font-size: 2.4rem;

    overflow: hidden;

    &:nth-of-type(2) {
      grid-row: 2 / span 2;
      grid-column: 2;

      font-family: 'Montserrat-Regular', sans-serif;

      line-height: 1.68;
    }

    &:nth-of-type(3) {
      grid-column: 1;
      grid-row: 2 / -1;

      display: flex;
      justify-content: center;
      align-items: center;

      img {
        width: 100%;
        height: auto;
      }
    }
  }

  .shape {
    position: absolute;
    grid-column: 3;
    grid-row: 3;

    width: 20vmax;
    height: 20vmax;

    border-radius: 50%;

    // transform: translate(0, 50%);

    background-color: #101110;

    z-index: 0;
  }
}

@keyframes bg_noise {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(5%, 5%, 0);
  }
}
